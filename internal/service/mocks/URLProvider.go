// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	context "context"
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// URLProvider is an autogenerated mock type for the URLProvider type
type URLProvider struct {
	mock.Mock
}

// GetDownloadMediaURL provides a mock function with given fields: ctx, path, expires
func (_m *URLProvider) GetDownloadMediaURL(ctx context.Context, path string, expires time.Duration) (*string, error) {
	ret := _m.Called(ctx, path, expires)

	if len(ret) == 0 {
		panic("no return value specified for GetDownloadMediaURL")
	}

	var r0 *string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, time.Duration) (*string, error)); ok {
		return rf(ctx, path, expires)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, time.Duration) *string); ok {
		r0 = rf(ctx, path, expires)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, time.Duration) error); ok {
		r1 = rf(ctx, path, expires)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewURLProvider creates a new instance of URLProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewURLProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *URLProvider {
	mock := &URLProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
