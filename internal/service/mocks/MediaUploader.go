// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	context "context"
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// MediaUploader is an autogenerated mock type for the MediaUploader type
type MediaUploader struct {
	mock.Mock
}

// UploadMedia provides a mock function with given fields: ctx, path, contentType, file
func (_m *MediaUploader) UploadMedia(ctx context.Context, path string, contentType string, file io.Reader) error {
	ret := _m.Called(ctx, path, contentType, file)

	if len(ret) == 0 {
		panic("no return value specified for UploadMedia")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, io.Reader) error); ok {
		r0 = rf(ctx, path, contentType, file)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMediaUploader creates a new instance of MediaUploader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMediaUploader(t interface {
	mock.TestingT
	Cleanup(func())
}) *MediaUploader {
	mock := &MediaUploader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
